{"ast":null,"code":"import { useRef as r, useEffect as n, useMemo as t, useReducer as e, useCallback as u } from \"react\";\nfunction c(e, u, c) {\n  var i = this,\n    a = r(null),\n    o = r(0),\n    f = r(null),\n    l = r([]),\n    v = r(),\n    m = r(),\n    d = r(e),\n    g = r(!0);\n  d.current = e;\n  var p = \"undefined\" != typeof window,\n    w = !u && 0 !== u && p;\n  if (\"function\" != typeof e) throw new TypeError(\"Expected a function\");\n  u = +u || 0;\n  var s = !!(c = c || {}).leading,\n    x = !(\"trailing\" in c) || !!c.trailing,\n    h = (\"maxWait\" in c),\n    y = \"debounceOnServer\" in c && !!c.debounceOnServer,\n    F = h ? Math.max(+c.maxWait || 0, u) : null;\n  n(function () {\n    return g.current = !0, function () {\n      g.current = !1;\n    };\n  }, []);\n  var A = t(function () {\n    var r = function (r) {\n        var n = l.current,\n          t = v.current;\n        return l.current = v.current = null, o.current = r, m.current = d.current.apply(t, n);\n      },\n      n = function (r, n) {\n        w && cancelAnimationFrame(f.current), f.current = w ? requestAnimationFrame(r) : setTimeout(r, n);\n      },\n      t = function (r) {\n        if (!g.current) return !1;\n        var n = r - a.current;\n        return !a.current || n >= u || n < 0 || h && r - o.current >= F;\n      },\n      e = function (n) {\n        return f.current = null, x && l.current ? r(n) : (l.current = v.current = null, m.current);\n      },\n      c = function r() {\n        var c = Date.now();\n        if (t(c)) return e(c);\n        if (g.current) {\n          var i = u - (c - a.current),\n            f = h ? Math.min(i, F - (c - o.current)) : i;\n          n(r, f);\n        }\n      },\n      A = function () {\n        if (p || y) {\n          var e = Date.now(),\n            d = t(e);\n          if (l.current = [].slice.call(arguments), v.current = i, a.current = e, d) {\n            if (!f.current && g.current) return o.current = a.current, n(c, u), s ? r(a.current) : m.current;\n            if (h) return n(c, u), r(a.current);\n          }\n          return f.current || n(c, u), m.current;\n        }\n      };\n    return A.cancel = function () {\n      f.current && (w ? cancelAnimationFrame(f.current) : clearTimeout(f.current)), o.current = 0, l.current = a.current = v.current = f.current = null;\n    }, A.isPending = function () {\n      return !!f.current;\n    }, A.flush = function () {\n      return f.current ? e(Date.now()) : m.current;\n    }, A;\n  }, [s, h, u, F, x, w, p, y]);\n  return A;\n}\nfunction i(r, n) {\n  return r === n;\n}\nfunction a(r, n) {\n  return n;\n}\nfunction o(n, t, o) {\n  var f = o && o.equalityFn || i,\n    l = e(a, n),\n    v = l[0],\n    m = l[1],\n    d = c(u(function (r) {\n      return m(r);\n    }, [m]), t, o),\n    g = r(n);\n  return f(g.current, n) || (d(n), g.current = n), [v, d];\n}\nfunction f(r, n, t) {\n  var e = void 0 === t ? {} : t,\n    u = e.leading,\n    i = e.trailing;\n  return c(r, n, {\n    maxWait: n,\n    leading: void 0 === u || u,\n    trailing: void 0 === i || i\n  });\n}\nexport { o as useDebounce, c as useDebouncedCallback, f as useThrottledCallback };","map":{"version":3,"names":["c","e","u","i","a","r","o","f","l","v","m","d","g","current","p","window","w","TypeError","s","leading","x","trailing","h","y","debounceOnServer","F","Math","max","maxWait","n","A","t","invokeFunc","apply","startTimer","cancelAnimationFrame","requestAnimationFrame","setTimeout","shouldInvoke","trailingEdge","Date","now","min","func","slice","call","arguments","cancel","clearTimeout","isPending","flush","equalityFn","useDebounce","useDebouncedCallback","useThrottledCallback"],"sources":["C:\\Users\\elros\\OneDrive\\Documents\\Playmaker\\frontend\\node_modules\\use-debounce\\src\\useDebouncedCallback.ts","C:\\Users\\elros\\OneDrive\\Documents\\Playmaker\\frontend\\node_modules\\use-debounce\\src\\useDebounce.ts","C:\\Users\\elros\\OneDrive\\Documents\\Playmaker\\frontend\\node_modules\\use-debounce\\src\\useThrottledCallback.ts"],"sourcesContent":["import { useRef, useEffect, useMemo } from 'react';\n\nexport interface CallOptions {\n  /**\n   * Controls if the function should be invoked on the leading edge of the timeout.\n   */\n  leading?: boolean;\n  /**\n   * Controls if the function should be invoked on the trailing edge of the timeout.\n   */\n  trailing?: boolean;\n}\n\nexport interface Options extends CallOptions {\n  /**\n   * The maximum time the given function is allowed to be delayed before it's invoked.\n   */\n  maxWait?: number;\n  /**\n   * If the setting is set to true, all debouncing and timers will happen on the server side as well\n   */\n  debounceOnServer?: boolean;\n}\n\nexport interface ControlFunctions {\n  /**\n   * Cancel pending function invocations\n   */\n  cancel: () => void;\n  /**\n   * Immediately invoke pending function invocations\n   */\n  flush: () => void;\n  /**\n   * Returns `true` if there are any pending function invocations\n   */\n  isPending: () => boolean;\n}\n\n/**\n * Subsequent calls to the debounced function `debounced.callback` return the result of the last func invocation.\n * Note, that if there are no previous invocations it's mean you will get undefined. You should check it in your code properly.\n */\nexport interface DebouncedState<T extends (...args: any) => ReturnType<T>>\n  extends ControlFunctions {\n  (...args: Parameters<T>): ReturnType<T> | undefined;\n}\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked, or until the next browser frame is drawn.\n *\n * The debounced function comes with a `cancel` method to cancel delayed `func`\n * invocations and a `flush` method to immediately invoke them.\n *\n * Provide `options` to indicate whether `func` should be invoked on the leading\n * and/or trailing edge of the `wait` timeout. The `func` is invoked with the\n * last arguments provided to the debounced function.\n *\n * Subsequent calls to the debounced function return the result of the last\n * `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `debounce` and `throttle`.\n *\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0]\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\n *  used (if available, otherwise it will be setTimeout(...,0)).\n * @param {Object} [options={}] The options object.\n *  Controls if `func` should be invoked on the leading edge of the timeout.\n * @param {boolean} [options.leading=false]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {number} [options.maxWait]\n *  Controls if `func` should be invoked the trailing edge of the timeout.\n * @param {boolean} [options.trailing=true]\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * const resizeHandler = useDebouncedCallback(calculateLayout, 150);\n * window.addEventListener('resize', resizeHandler)\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * const clickHandler = useDebouncedCallback(sendMail, 300, {\n *   leading: true,\n *   trailing: false,\n * })\n * <button onClick={clickHandler}>click me</button>\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * const debounced = useDebouncedCallback(batchLog, 250, { 'maxWait': 1000 })\n * const source = new EventSource('/stream')\n * source.addEventListener('message', debounced)\n *\n * // Cancel the trailing debounced invocation.\n * window.addEventListener('popstate', debounced.cancel)\n *\n * // Check for pending invocations.\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\n */\nexport default function useDebouncedCallback<\n  T extends (...args: any) => ReturnType<T>,\n>(func: T, wait?: number, options?: Options): DebouncedState<T> {\n  const lastCallTime = useRef(null);\n  const lastInvokeTime = useRef(0);\n  const timerId = useRef(null);\n  const lastArgs = useRef<unknown[]>([]);\n  const lastThis = useRef<unknown>();\n  const result = useRef<ReturnType<T>>();\n  const funcRef = useRef(func);\n  const mounted = useRef(true);\n  // Always keep the latest version of debounce callback, with no wait time.\n  funcRef.current = func;\n\n  const isClientSize = typeof window !== 'undefined';\n  // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n  const useRAF = !wait && wait !== 0 && isClientSize;\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n\n  wait = +wait || 0;\n  options = options || {};\n\n  const leading = !!options.leading;\n  const trailing = 'trailing' in options ? !!options.trailing : true; // `true` by default\n  const maxing = 'maxWait' in options;\n  const debounceOnServer =\n    'debounceOnServer' in options ? !!options.debounceOnServer : false; // `false` by default\n  const maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : null;\n\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n\n  // You may have a question, why we have so many code under the useMemo definition.\n  //\n  // This was made as we want to escape from useCallback hell and\n  // not to initialize a number of functions each time useDebouncedCallback is called.\n  //\n  // It means that we have less garbage for our GC calls which improves performance.\n  // Also, it makes this library smaller.\n  //\n  // And the last reason, that the code without lots of useCallback with deps is easier to read.\n  // You have only one place for that.\n  const debounced = useMemo(() => {\n    const invokeFunc = (time: number) => {\n      const args = lastArgs.current;\n      const thisArg = lastThis.current;\n\n      lastArgs.current = lastThis.current = null;\n      lastInvokeTime.current = time;\n      return (result.current = funcRef.current.apply(thisArg, args));\n    };\n\n    const startTimer = (pendingFunc: () => void, wait: number) => {\n      if (useRAF) cancelAnimationFrame(timerId.current);\n      timerId.current = useRAF\n        ? requestAnimationFrame(pendingFunc)\n        : setTimeout(pendingFunc, wait);\n    };\n\n    const shouldInvoke = (time: number) => {\n      if (!mounted.current) return false;\n\n      const timeSinceLastCall = time - lastCallTime.current;\n      const timeSinceLastInvoke = time - lastInvokeTime.current;\n\n      // Either this is the first call, activity has stopped and we're at the\n      // trailing edge, the system time has gone backwards and we're treating\n      // it as the trailing edge, or we've hit the `maxWait` limit.\n      return (\n        !lastCallTime.current ||\n        timeSinceLastCall >= wait ||\n        timeSinceLastCall < 0 ||\n        (maxing && timeSinceLastInvoke >= maxWait)\n      );\n    };\n\n    const trailingEdge = (time: number) => {\n      timerId.current = null;\n\n      // Only invoke if we have `lastArgs` which means `func` has been\n      // debounced at least once.\n      if (trailing && lastArgs.current) {\n        return invokeFunc(time);\n      }\n      lastArgs.current = lastThis.current = null;\n      return result.current;\n    };\n\n    const timerExpired = () => {\n      const time = Date.now();\n      if (shouldInvoke(time)) {\n        return trailingEdge(time);\n      }\n      // https://github.com/xnimorz/use-debounce/issues/97\n      if (!mounted.current) {\n        return;\n      }\n      // Remaining wait calculation\n      const timeSinceLastCall = time - lastCallTime.current;\n      const timeSinceLastInvoke = time - lastInvokeTime.current;\n      const timeWaiting = wait - timeSinceLastCall;\n      const remainingWait = maxing\n        ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke)\n        : timeWaiting;\n\n      // Restart the timer\n      startTimer(timerExpired, remainingWait);\n    };\n\n    const func: DebouncedState<T> = (...args: Parameters<T>): ReturnType<T> => {\n      if (!isClientSize && !debounceOnServer) {\n        return;\n      }\n      const time = Date.now();\n      const isInvoking = shouldInvoke(time);\n\n      lastArgs.current = args;\n      lastThis.current = this;\n      lastCallTime.current = time;\n\n      if (isInvoking) {\n        if (!timerId.current && mounted.current) {\n          // Reset any `maxWait` timer.\n          lastInvokeTime.current = lastCallTime.current;\n          // Start the timer for the trailing edge.\n          startTimer(timerExpired, wait);\n          // Invoke the leading edge.\n          return leading ? invokeFunc(lastCallTime.current) : result.current;\n        }\n        if (maxing) {\n          // Handle invocations in a tight loop.\n          startTimer(timerExpired, wait);\n          return invokeFunc(lastCallTime.current);\n        }\n      }\n      if (!timerId.current) {\n        startTimer(timerExpired, wait);\n      }\n      return result.current;\n    };\n\n    func.cancel = () => {\n      if (timerId.current) {\n        useRAF\n          ? cancelAnimationFrame(timerId.current)\n          : clearTimeout(timerId.current);\n      }\n      lastInvokeTime.current = 0;\n      lastArgs.current =\n        lastCallTime.current =\n        lastThis.current =\n        timerId.current =\n          null;\n    };\n\n    func.isPending = () => {\n      return !!timerId.current;\n    };\n\n    func.flush = () => {\n      return !timerId.current ? result.current : trailingEdge(Date.now());\n    };\n\n    return func;\n  }, [\n    leading,\n    maxing,\n    wait,\n    maxWait,\n    trailing,\n    useRAF,\n    isClientSize,\n    debounceOnServer,\n  ]);\n\n  return debounced;\n}\n","import { useCallback, useRef, useReducer } from 'react';\nimport useDebouncedCallback, { DebouncedState } from './useDebouncedCallback';\n\nfunction valueEquality<T>(left: T, right: T): boolean {\n  return left === right;\n}\n\nfunction reducer<T>(_: T, action: T) {\n  return action;\n}\n\nexport default function useDebounce<T>(\n  value: T,\n  delay: number,\n  options?: {\n    maxWait?: number;\n    leading?: boolean;\n    trailing?: boolean;\n    equalityFn?: (left: T, right: T) => boolean;\n  }\n): [T, DebouncedState<(value: T) => void>] {\n  const eq = (options && options.equalityFn) || valueEquality;\n\n  const [state, dispatch] = useReducer(reducer, value);\n  const debounced = useDebouncedCallback(\n    useCallback((value: T) => dispatch(value), [dispatch]),\n    delay,\n    options\n  );\n  const previousValue = useRef(value);\n\n  if (!eq(previousValue.current, value)) {\n    debounced(value);\n    previousValue.current = value;\n  }\n\n  return [state as T, debounced];\n}\n","import useDebouncedCallback, {\n  CallOptions,\n  DebouncedState,\n} from './useDebouncedCallback';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds (or once per browser frame).\n *\n * The throttled function comes with a `cancel` method to cancel delayed `func`\n * invocations and a `flush` method to immediately invoke them.\n *\n * Provide `options` to indicate whether `func` should be invoked on the leading\n * and/or trailing edge of the `wait` timeout. The `func` is invoked with the\n * last arguments provided to the throttled function.\n *\n * Subsequent calls to the throttled function return the result of the last\n * `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `throttle` and `debounce`.\n *\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0]\n *  The number of milliseconds to throttle invocations to; if omitted,\n *  `requestAnimationFrame` is used (if available, otherwise it will be setTimeout(...,0)).\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * const scrollHandler = useThrottledCallback(updatePosition, 100)\n * window.addEventListener('scroll', scrollHandler)\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * const { callback } = useThrottledCallback(renewToken, 300000, { 'trailing': false })\n * <button onClick={callback}>click</button>\n *\n * // Cancel the trailing throttled invocation.\n * window.addEventListener('popstate', throttled.cancel);\n */\nexport default function useThrottledCallback<\n  T extends (...args: any) => ReturnType<T>,\n>(\n  func: T,\n  wait: number,\n  { leading = true, trailing = true }: CallOptions = {}\n): DebouncedState<T> {\n  return useDebouncedCallback(func, wait, {\n    maxWait: wait,\n    leading,\n    trailing,\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}